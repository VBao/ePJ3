@using System.Collections
@model IEnumerable<eProject3_1.Models.Vacancy>

@{
    Layout = null;
    List<VacancyStatus> Stat =(List<VacancyStatus>) ViewBag.Stat;
    List<VacancyStatus> StatR =(List<VacancyStatus>) ViewBag.StatR;

    IEnumerable<SelectListItem> StatList(List<VacancyStatus> list,string id,int rId  )
    {
        List<SelectListItem> rs = new List<SelectListItem>();
        foreach (VacancyStatus v in list)
        {
            if (v.Id==rId)
            {
                continue;
            }
            rs.Add(new SelectListItem
            {
                Text = v.Status,
                Value = id+"/"+v.Id
            });
        }
        return rs;
    } 
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>Index</title>
</head>
<body>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Close)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status.Status)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Details)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Close)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Status,new {@class="ahihi"})
                <select style="display: none" id="stats" class="form-control change" asp-items="@String.CompareOrdinal(item.Employee.Username, User.Identity.Name) == 0 ? StatList(StatR,item.Id,item.Status.Id) : StatList(Stat,item.Id,item.Status.Id)">
                    <option value="">-- Change --</option>
                </select>

            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a href="#" id="change">Change Status</a>

            </td>
        </tr>
        <p id="demo"></p>
    }
    <script>
    document.getElementById("change").addEventListener("click",show);
    document.getElementById("stats").addEventListener("change",changeStats);
    function show() {
      var el=document.getElementById("stats");
      var elT=document.getElementById("statsT");
      if(el.style.display === "none"){
              el.style.display = "block";
              elT.style.display = "none";
          }else{
              el.style.display = "none";
              elT.style.display = "block";
          }
    }
    function changeStats() {
      var stat=document.getElementById("stats").value;
      var url='@Url.Action("ChangeStats")'+'/'+stat+'/';
      document.getElementById("demo").innerHTML=url;
      window.open(url);
    }
    </script>
    </tbody>
</table>


</body>

</html>